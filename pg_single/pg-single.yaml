
apiVersion: v1
kind: PersistentVolume
metadata:
  name: browseterm-pg-pv
  namespace: ${NAMESPACE}
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/browseterm-pg
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: browseterm-pg-pvc
  namespace: ${NAMESPACE}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Pod
metadata:
  name: browseterm-pg
  namespace: ${NAMESPACE}
  labels:
    app: browseterm-pg
spec:
  containers:
  - name: postgres
    image: postgres:15
    ports:
    - containerPort: 5432
    lifecycle:
      postStart:
        exec:
          command:
            - /bin/bash
            - -c
            - |
              # Wait for PostgreSQL to be ready
              until pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}; do
                echo "Waiting for PostgreSQL to be ready..."
                sleep 2
              done
              
              # Check if the test database exists, create if not
              if ! psql -U ${POSTGRES_USER} -d ${POSTGRES_DB} -lqt | cut -d \| -f 1 | grep -qw ${POSTGRES_TEST_DB}; then
                echo "Creating database ${POSTGRES_TEST_DB}"
                psql -U ${POSTGRES_USER} -d ${POSTGRES_DB} -c "CREATE DATABASE ${POSTGRES_TEST_DB};"
                psql -U ${POSTGRES_USER} -d ${POSTGRES_DB} -c "GRANT ALL PRIVILEGES ON DATABASE ${POSTGRES_TEST_DB} TO ${POSTGRES_USER};"
                echo "Database ${POSTGRES_TEST_DB} created successfully"
              else
                echo "Database ${POSTGRES_TEST_DB} already exists"
              fi
    env:
    - name: POSTGRES_USER
      value: ${POSTGRES_USER}
    - name: POSTGRES_PASSWORD
      valueFrom:
        secretKeyRef:
          name: pg-password
          key: POSTGRES_PASSWORD
    - name: POSTGRES_DB
      value: ${POSTGRES_DB}
    volumeMounts:
    - name: pgdata
      mountPath: /var/lib/postgresql/data
  volumes:
  - name: pgdata
    persistentVolumeClaim:
      claimName: browseterm-pg-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: browseterm-pg-service
  namespace: ${NAMESPACE}
spec:
  selector:
    app: browseterm-pg
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP
---
apiVersion: v1
kind: Secret
metadata:
  name: pg-password
  namespace: ${NAMESPACE}
type: Opaque
data:
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_BASE64}
